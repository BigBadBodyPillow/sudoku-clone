.board-container {
  --grid-gap: 0.1rem;

  box-sizing: border-box;
  display: grid;

  /* width: 90%; */
  /* width: 100%; */
  max-width: 900px;
  /* aspect-rsatio: 1/1; */
  /* max-height: 100vh; */
  grid-template-columns: repeat(3, 1fr);
  grid-template-rows: repeat(3, 1fr);

  padding: var(--grid-gap);
  gap: var(--grid-gap);
  border-radius: var(--border-radius);
  background-color: var(--game-background-colour);
}
@media (width <= 710px) {
  .board-wrapper {
    padding: 20px;
  }
}

@media (orientation: landscape) and (height <= 800px) {
  .board-container {
    max-width: 600px !important;
  }
}
@media (orientation: landscape) and (height <= 700px) {
  .board-container {
    max-width: 500px !important;
  }
}
@media (orientation: landscape) and (height <= 600px) {
  .board-container {
    max-width: 400px !important;
  }
}
@media (orientation: landscape) and (height <= 500px) {
  .board-container {
    max-width: 300px !important;
  }
  .controls {
    margin: 0.5rem 0 !important;
  }
}
@media (orientation: landscape) and (height <= 400px) {
  .board-container {
    max-width: 270px !important;
  }
}
@media (width <= 1920px) {
  .board-container {
    max-width: 700px;
  }
}
/* targeted towards mobile devices */
/* @media (orientation: landscape) and (max-width: 1900px) {
  .board-container {
    width: auto !important;
    height: 80%;
  }
} */

.board {
  display: grid;
  aspect-ratio: 1/1;
  grid-template-columns: repeat(3, 1fr);
  grid-template-rows: repeat(3, 1fr);

  gap: var(--grid-gap);
  border: var(--grid-gap) solid var(--square-colour_given);
  border-radius: var(--border-radius);
  background: var(--square-colour_given);

  /* font-size: 1.5em; */
  font-size: clamp(16px, 1.5em, 24px);
}

@media (width <= 800px) {
  .board {
    /* font-size: 0.75rem; */
    /* font-size: 1rem; */
    font-size: clamp(16px, 1em, 24px);
  }
}
@media (width <= 500px) {
  .board {
    /* font-size: 0.5rem; */
    /* font-size: 0.75rem; */
    font-size: clamp(16px, 0.75em, 24px);
  }
}

/* .board[data-index='board1'] {
  background: var(--border-colour);
} */

.square {
  border-radius: var(--border-radius);
  background: var(--square-colour);
  display: flex;
  justify-content: center;
  align-items: center;
  line-height: 1rem;
}

.square.editable:hover {
  background: var(--square-colour_hover);
}

.square.editable:active {
  background: var(--square-colour_active);
}

.square.given {
  color: var(--text-colour_alt);
  background: var(--square-colour_given);
}

/* .square.editable {
  background: var(--square-colour);
}
.square.editable:hover {
  background: var(--border-colour);
} */

.square.invalid {
  outline: 2px solid var(--invalid-colour);
  z-index: 1;
}

.square-text {
  user-select: none;
}
.square-cell {
  position: relative;
  width: 100%;
  height: 100%;
}

/* keypad below the active cell (desktop only) */
.keypad {
  position: absolute;
  left: 50%;
  transform: translateX(-50%);
  top: 100%;
  margin-top: 0.25rem;
  display: grid;
  grid-template-columns: auto auto auto;
  gap: 0.15rem;
  background: var(--keypad-background);
  padding: 0.25rem;
  border-radius: var(--border-radius);
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.25);

  z-index: 172;
}

.keypad-key {
  box-sizing: border-box;
  appearance: none;
  border: none;
  border-radius: var(--border-radius);
  padding: 0;
  width: 2.1em; /* ~about 50px at highest font size */
  aspect-ratio: 1/1;
  background: var(--square-colour);
  color: var(--text-colour);
  font: inherit;
  cursor: pointer;
}
.keypad-key:hover {
  color: var(--text-colour);
}

.keypad-delete {
  width: 100%;
  height: 1.66em; /* ~about 40px at highest font size */
  color: var(--text-colour);
  grid-column-start: 1;
  grid-column-end: 4;
}
.keypad-delete:hover {
  filter: brightness(0.95);
}
.keypad-delete:active {
  filter: brightness(0.9);
}

.square-input {
  cursor: pointer;
  box-sizing: border-box;
  width: 100%;
  aspect-ratio: 1/1;
  text-align: center;
  background: transparent;
  border: none;
  color: var(--text-colour);
  font: inherit;
  caret-color: transparent;
}
.square-input:focus {
  outline: 2px solid var(--accent-colour);
  /* outline: none; */
  z-index: 1;
  border-radius: var(--border-radius);
}

.notes-grid {
  position: absolute;
  inset: 0;
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-template-rows: repeat(3, 1fr);
  pointer-events: none;
  color: var(--text-colour_alt);
  opacity: 0.9;
  /* font-size: 0.5em; */
  font-size: clamp(16px, 0.5em, 24px);
}
.notes-grid .note {
  display: flex;
  align-items: center;
  justify-content: center;
}
.notes-grid .note.present {
  opacity: 1;
}

/* ios defaults to a blue1 */
button {
  color: var(--text-colour);
}
.controls {
  display: flex;
  justify-content: space-between;
  margin: 1rem 0;
  gap: 8px;
}
.controls button {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 8px;
  width: 100%;
}
.controls .notes-button[aria-pressed='true'] {
  background: var(--accent-colour);
  color: white;
  opacity: 1; /* to stop the hover */
}
.newgame--icon {
  transition: transform 0.3s ease-in-out;
  transform: rotate(0deg);
}
.new-game-button:hover .newgame--icon {
  transform: rotate(-90deg);
}
.new-game-button:active .newgame--icon {
  transform: rotate(-180deg);
}

.notes--icon {
  transition: transform 0.2s ease;
  fill: currentColor;
  scale: 0.8;
  transform: rotate(-25deg);
}

.notes-button:hover .notes--icon {
  animation: scribble 0.3s ease-in-out;
}
@keyframes scribble {
  25% {
    transform: rotate(-30deg) translate(-1px, 1px);
  }
  50% {
    transform: rotate(-20deg) translate(1px, -1px);
  }
  75% {
    transform: rotate(-28deg) translate(-1px, 0);
  }
}
